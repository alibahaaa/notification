// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.5.20"
    ext.hilt_version = '2.38.1'

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.2"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.0'
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    apply plugin: 'maven-publish'
    repositories {
        google()
        mavenCentral()
    }
}



publishing {

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/basalam/notification")
//            credentials {
//                username = "alibahaaa"
//                password = "************"
//            }
        }
    }
    publishing {
        publications {
            aar(MavenPublication) {
                groupId = "com.basalam.notificationmodule"
                artifactId = "notification"
                version = "1.0.1"
                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact("$rootDir/Notification Module/build/outputs/aar/Notification Module-release.aar")
            }
        }
    }
}

publishing {

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/basalam/notification")
            credentials {
                username = "alibahaaa"
                password = "**"
            }
        }
    }
    publishing {
        publications {
            aar(MavenPublication) {
                groupId = "com.basalam.notificationmodule"
                artifactId = "notification"
                version = "1.0.1"
                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact("$rootDir/Notification Module/build/outputs/aar/Notification Module-release.aar")
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}